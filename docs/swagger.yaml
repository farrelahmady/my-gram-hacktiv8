definitions:
  models.Comment:
    properties:
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      photo:
        $ref: '#/definitions/models.Photo'
      photo_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: integer
    type: object
  models.Photo:
    properties:
      caption:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      created_at:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: integer
    type: object
  models.SocialMedia:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userID:
        type: integer
    type: object
  models.User:
    properties:
      age:
        type: integer
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      photos:
        items:
          $ref: '#/definitions/models.Photo'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Login
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Age
        in: formData
        name: age
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Register
      tags:
      - User
  /comments:
    get:
      consumes:
      - application/json
      description: Get all comments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all comments
      tags:
      - Comments
    post:
      consumes:
      - application/json
      description: Create a comment
      parameters:
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a comment
      tags:
      - Comments
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a comment
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a comment
      tags:
      - Comments
    get:
      consumes:
      - application/json
      description: Get a comment
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a comment
      tags:
      - Comments
    put:
      consumes:
      - application/json
      description: Update a comment
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a comment
      tags:
      - Comments
  /photos:
    get:
      consumes:
      - application/json
      description: Get all photos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Photo'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all photos
      tags:
      - Photos
    post:
      consumes:
      - application/json
      description: Create a photo
      parameters:
      - description: Photo Title
        in: formData
        name: title
        required: true
        type: string
      - description: Photo URL
        in: formData
        name: photo_url
        required: true
        type: string
      - description: Photo Caption
        in: formData
        name: caption
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Photo'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a photo
      tags:
      - Photos
  /photos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a photo
      parameters:
      - description: Photo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a photo
      tags:
      - Photos
    get:
      consumes:
      - application/json
      description: Get a photo
      parameters:
      - description: Photo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Photo'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a photo
      tags:
      - Photos
    put:
      consumes:
      - application/json
      description: Update a photo
      parameters:
      - description: Photo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Photo Title
        in: formData
        name: title
        required: true
        type: string
      - description: Photo URL
        in: formData
        name: photo_url
        required: true
        type: string
      - description: Photo Caption
        in: formData
        name: caption
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Photo'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a photo
      tags:
      - Photos
  /socialMedias:
    get:
      consumes:
      - application/json
      description: Get all social media
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SocialMedia'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all social media
      tags:
      - SocialMedias
    post:
      consumes:
      - application/json
      description: Create a social media
      parameters:
      - description: SocialMedia
        in: body
        name: socialMedia
        required: true
        schema:
          $ref: '#/definitions/models.SocialMedia'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SocialMedia'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a social media
      tags:
      - SocialMedias
  /socialMedias/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a social media
      parameters:
      - description: SocialMedia ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a social media
      tags:
      - SocialMedias
    get:
      consumes:
      - application/json
      description: Get a social media
      parameters:
      - description: SocialMedia ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SocialMedia'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get a social media
      tags:
      - SocialMedias
    put:
      consumes:
      - application/json
      description: Update a social media
      parameters:
      - description: SocialMedia ID
        in: path
        name: id
        required: true
        type: integer
      - description: SocialMedia
        in: body
        name: socialMedia
        required: true
        schema:
          $ref: '#/definitions/models.SocialMedia'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SocialMedia'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a social media
      tags:
      - SocialMedias
swagger: "2.0"
